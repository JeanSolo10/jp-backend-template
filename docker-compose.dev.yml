services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - nodejs-backend-server
    ports:
      - '3000:80'
  nodejs-backend-server:
    build:
      context: .
      target: development
      args:
        NODE_ENV: development
    depends_on:
      - postgres_db
    env_file:
      - .env
    environment:
      NODE_ENV: development
    volumes:
      - ./:/usr/app_name # needed to sync local files to docker files for development
      - /usr/app_name/node_modules
    working_dir: /usr/app_name
    entrypoint: ['/bin/sh', '-c']
    command:
      - |
        echo "Running migrations..."
        npm run server:migrate
        echo "Starting dev server..."
        npm run server:dev
  postgres_db:
    image: postgres:16.8
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5m
      timeout: 10s
      retries: 5

volumes:
  postgres-db:
